1 Array, 42 elements with 1-13 number and a suit indicator. 
	Possibly run it through a hash to parse the card number and suit class.
	


a Arrays, each suit, 13 cards in each suit. 
shuffle array for dealing. - http://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array-in-javascript
Remove car drom array when dealt.

Choose rules? double stack or only up and down. 
Hash to change 13 to King, 1 to Ace

CSS to setup cards, up cards and down
2 : 4 : 2 setup. when the cards run out, cards should disappear.

Program, mouse clicks for player one?
program, button clicks a-g for 1-5 possibly, 1,2 for pile 1-2?

Program computer player, setTimeout( ) - difficully determines how long set time out will run. 
2 pages, one for comp, one for 2 players.

*leaderboard - would require a psql datbase to track. 


1 Game Logic/ Rule Set
2 Game Board-Cards Creation
 Beginning options (1p, 2p, stack/nonstack)
 Angular - Transitions animations
 Database/ Leaderboards
 Authentication















var compMove = function(active){
	var active = true;
		// setTimeout(function(){

		while(active){

			active = false;
		var count = upperHand.length;

			for(var i = 0; i < upperHand.length; i++){
				
				// (function(j){
				// setTimeout(function(){console.log(upperHand,j,playRight)},2000*(1+j));
				// setTimeout(function(){console.log(upperHand,j,playLeft)},2000*(1+j));
				// setTimeout(function(){attemptPlay(upperHand,j,playLeft)},2000*(1+j))
				// setTimeout(function(){attemptPlay(upperHand,j,playRight)},2000*(1+j));
				
				(function(j){
				setTimeout(function(){
					attemptPlay(upperHand,j,playRight);
					attemptPlay(upperHand,j,playLeft);

					if (upperHand.length !== 5 || upperDeck.length===0){
						active = true;
						do{drawCard(upperHand); count = upperHand.length;}
							while(upperHand.count<5 && upperDeck.length===0);
					}
					
				},2000*(1+j));
				})(i);

				// })(i);
				// attemptPlay(upperHand,i,playLeft);
				// attemptPlay(upperHand,i,playRight);
			} 
			
			// if (upperHand.length !== 5 || upperDeck.length===0){
			// 	active = true;
			// 	do{drawCard(upperHand); count = upperHand.length;}
			// 		while(upperHand.count<5 && upperDeck.length===0);
			// }
		}

	// },2000);
	setWin();
 